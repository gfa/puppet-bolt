#!/bin/bash
# vim: set ts=2 sw=2 et :
set -e

if [ "${CI_DEBUG_TRACE}x" != "x" ]; then
  set -x
fi

TEMP=$(getopt -o 'vtdnh' --long 'trace,verbose,help,test,debug,noop,role:,show_diff,target::' -n 'puppet-apply' -- "$@")

# shellcheck disable=SC2181
if [ $? -ne 0 ]; then
        echo 'Terminating...' >&2
        exit 1
fi

# Note the quotes around "$TEMP": they are essential!
eval set -- "$TEMP"
unset TEMP

APPLY_OPTIONS="--graph --modulepath=/etc/puppet/code/modules:/etc/puppet/code/site --hiera_config=/etc/puppet/hiera.yaml --libdir=/etc/puppet/code/lib --logdest=/tmp/puppet.jsonl"
TARGET="/etc/puppet/code/site/base/manifests/init.pp"
TARGET=' -e "include base"'

while true; do
  case "$1" in
    '-h'|'--help')
      echo 'Usage: puppet-apply [-n|--noop] [-t|--test] [-d|--debug] [--show_dif] [--role foo] [--target [/etc/puppet/code/manifests/foo.pp]] host1 [hostN]'
      APPLY_OPTIONS+=" --help"
      shift
      continue
      exit 0
      ;;
    '-v'|'--verbose')
      APPLY_OPTIONS+=" --verbose"
      shift
      continue
      ;;
    '-t'|'--test')
      APPLY_OPTIONS+=" --test"
      shift
      continue
      ;;
    '-d'|'--debug')
      APPLY_OPTIONS+=" --debug"
      shift
      continue
      ;;
    '-n'|'--noop')
      APPLY_OPTIONS+=" --noop"
      shift
      continue
      ;;
    '--trace')
      APPLY_OPTIONS+=" --trace"
      shift
      continue
      ;;
    '--show_diff')
      APPLY_OPTIONS+=" --show_diff"
      shift
      continue
      ;;
    '-r'|'--role')
      echo "unimplemented, argument '$2'"
      shift 2
      continue
      ;;
    '--target')
      # c has an optional argument. As we are in quoted mode,
      # an empty parameter will be generated if its optional
      # argument is not found.
      case "$2" in
        '')
          echo 'targeting default /etc/puppet/code/site/base/manifests/init.pp'
          TARGET="/etc/puppet/code/site/base/manifests/init.pp"
          ;;
        *)
          echo "targeting $2"
          TARGET="$2"
          ;;
          esac
          shift 2
          continue
          ;;
        '--')
          shift
          break
          ;;
        *)
          echo 'Internal error!' >&2
          exit 1
          ;;
      esac
    done

# for eyaml files
HIERA_TEMP=$(mktemp -d)
cleanup() {
  rm -rf "$HIERA_TEMP"
}

trap cleanup SIGINT SIGTERM ERR EXIT

EYAML_PUB_KEY=$(<keys/public_key.pkcs7.pem)
export EYAML_PUB_KEY

mkdir -p logs

for host; do
  echo  "$host"
  ssh "root@${host}" 'test -x /usr/bin/puppet || (rm -f /etc/ssh/ssh_host* && dpkg-reconfigure -fnoninteractive openssh-server && timedatectl set-timezone UTC && apt update && apt -y autoremove --purge puppet-agent puppet+ rsync+)'
  # shellcheck disable=SC2086
  ssh "root@${host}" mkdir -p /etc/puppet/code/hieradata/hosts/${host}
  ssh "root@${host}" 'test ! -f /etc/puppet/do-not-run || (echo "/etc/puppet/do-not-run present" ; exit 1)'
  rsync -raq --delete --exclude='.git' --exclude='hieradata' hiera.yaml modules site lib "root@${host}:/etc/puppet/code/"
  rsync -raq keys/* "${HIERA_TEMP}/"
  rsync -raq hieradata "${HIERA_TEMP}/"
  # shellcheck disable=SC2156
  find "${HIERA_TEMP}" -type f -iname '*yaml' -execdir sh -c "eyaml decrypt --pkcs7-private-key-env-var='EYAML_PRIV_KEY' --pkcs7-public-key-env-var='EYAML_PUB_KEY' -f {} | sponge {}" \;
  rsync -aq --no-r --exclude='.git' "${HIERA_TEMP}"/hieradata/*yaml "root@${host}:/etc/puppet/code/hieradata/"
  rsync -aqK --delete --exclude='.git' "${HIERA_TEMP}/hieradata/hosts/${host}/" "root@${host}:/etc/puppet/code/hieradata/hosts/${host}/"
  rsync -raq hiera.yaml "root@${host}:/etc/puppet/hiera.yaml"
  set +e
  # shellcheck disable=SC2029
  ssh "root@${host}" puppet apply "${APPLY_OPTIONS} ${TARGET}"
  PUPPET_EXIT_CODE=$?
  ssh "root@${host}" find /etc/puppet/code/hieradata -maxdepth 1 -type f -delete
  # shellcheck disable=SC2086
  ssh "root@${host}" find /etc/puppet/code/hieradata/hosts/${host} -type f -delete
  rsync -raq  "root@${host}:/tmp/puppet.jsonl" "logs/${host}.jsonl"
  if [ "${CI}x" == "x" ]; then
    # display puppet's output when running directly
    cat "logs/${host}.jsonl"
    echo ${PUPPET_EXIT_CODE}
  fi
  echo ${PUPPET_EXIT_CODE} >> "logs/${host}.jsonl"

  if [ $PUPPET_EXIT_CODE = 1 ]; then
    exit 1
  else
    exit 0
  fi
done
