# Managed by Puppet
#
# vim: ts=2 sts=2 sw=2 expandtab

# See /usr/share/postfix/main.cf.dist for a commented, more complete version


# Debian specific:  Specifying a file name will cause the first
# line of that file to be used as the name.  The Debian default
# is /etc/mailname.
myorigin = /etc/mailname

smtpd_banner = $myhostname ESMTP $mail_name (Debian/GNU)
biff = no

# appending .domain is the MUA's job.
append_dot_mydomain = no

# Uncomment the next line to generate "delayed mail" warnings
#delay_warning_time = 4h

readme_directory = no

# See http://www.postfix.org/COMPATIBILITY_README.html -- default to 2 on
# fresh installs.
compatibility_level = 2
enable_long_queue_ids = yes

# TLS parameters
smtpd_tls_cert_file=/var/lib/dehydrated/certs/<%= @networking['fqdn'] %>/fullchain.pem
smtpd_tls_key_file=/var/lib/dehydrated/certs/<%= @networking['fqdn'] %>/privkey.pem
smtpd_use_tls=yes
smtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache
smtp_tls_session_cache_database = btree:${data_directory}/smtp_scache

tls_preempt_cipherlist = yes
smtp_tls_loglevel = 1
smtp_tls_security_level = dane
smtp_dns_support_level = dnssec
smtpd_tls_loglevel = 1
smtpd_tls_eecdh_grade = ultra
smtpd_tls_security_level = may
smtpd_tls_auth_only = yes
smtpd_tls_dh1024_param_file = ${config_directory}/dh2048.pem
smtpd_tls_dh512_param_file = ${config_directory}/dh512.pem

smtp_tls_CAfile = /etc/ssl/certs/ca-certificates.crt

# mta-sts
smtp_tls_policy_maps = <%= scope.lookupvar('postfix::config')[@instance]['smtp_tls_policy_maps'] %>

# Disable SSL compression
tls_ssl_options = NO_COMPRESSION

# Disable SSLv2 and SSLv3 leaving TLSv1.1 and TLSv1.2 enabled.
smtpd_tls_mandatory_protocols = !SSLv2, !SSLv3, !TLSv1
smtpd_tls_protocols = !SSLv2, !SSLv3, !TLSv1

# Configure the allowed cipher list
smtpd_tls_mandatory_ciphers = high
tls_high_cipherlist = EDH+CAMELLIA:EDH+aRSA:EECDH+aRSA+AESGCM:EECDH+aRSA+SHA384:EECDH+aRSA+SHA256:EECDH:+CAMELLIA256:+AES256:+CAMELLIA128:+AES128:+SSLv3:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!DSS:!RC4:!SEED:!ECDSA:CAMELLIA256-SHA:AES256-SHA:CAMELLIA128-SHA:AES128-SHA
smtpd_tls_exclude_ciphers = aNULL, eNULL, EXPORT, DES, RC4, MD5, PSK, aECDH, EDH-DSS-DES-CBC3-SHA, EDH-RSA-DES-CBC3-SHA, KRB5-DES, CBC3-SHA


# See /usr/share/doc/postfix/TLS_README.gz in the postfix-doc package for
# information on enabling SSL in the smtp client.

#smtpd_relay_restrictions = permit_mynetworks permit_sasl_authenticated defer_unauth_destination
myhostname = <%= @networking['fqdn'] %>
alias_maps = hash:/etc/aliases
alias_database = hash:/etc/aliases
mydestination = $myhostname, <%= @networking['fqdn'] %>, localhost.<%= @networking['domain'] %>, localhost
relayhost =
mynetworks = 127.0.0.0/8 [::ffff:127.0.0.0]/104 [::1]/128 <%= scope.lookupvar('postfix::config')[@instance]['mynetworks_append'] %>
mailbox_size_limit = 0
recipient_delimiter = +
inet_interfaces = all
inet_protocols = all


# spamassassin
non_smtpd_milters = <%= scope.lookupvar('postfix::config')[@instance]['non_smtpd_milters'] %>
smtpd_milters = <%= scope.lookupvar('postfix::config')[@instance]['smtpd_milters'] %>
milter_default_action = accept
milter_connect_macros = j {daemon_name} v {if_name} _
milter_data_macros = j i {daemon_name} v {if_name} _


# AUTH
smtpd_sasl_type = dovecot
smtpd_sasl_auth_enable = yes
#smtpd_recipient_restrictions = permit_sasl_authenticated permit_mynetworks reject_unauth_destination
smtpd_sasl_path = private/auth

# Virtual domains
virtual_transport = lmtp:unix:private/dovecot-lmtp
virtual_mailbox_domains = <%= scope.lookupvar('postfix::config')[@instance]['virtual_mailbox_domains'].join(', ') %>
virtual_mailbox_maps = <%= scope.lookupvar('postfix::config')[@instance]['virtual_mailbox_maps'].join(', ')  %>
virtual_alias_maps = <%= scope.lookupvar('postfix::config')[@instance]['virtual_alias_maps'].join(', ') %>

# Restrictions
smtpd_helo_required = yes
smtpd_helo_restrictions =
        permit_mynetworks,
#       check_client_access hash:/etc/postfix/blackhosts,
#       permit_sasl_authenticated,
#       check_client_access hash:/etc/postfix/servers,
#       check_client_access hash:/etc/postfix/check_client_access,
#       check_helo_access pcre:/etc/postfix/helo_deny,
        reject_invalid_helo_hostname,
        reject_non_fqdn_hostname

smtpd_recipient_restrictions =
        permit_mynetworks,
        reject_unauth_destination,
        reject_unauth_pipelining,
        reject_non_fqdn_recipient,
        reject_non_fqdn_sender,
        reject_unknown_sender_domain,
        reject_unknown_recipient_domain,
        reject_unauth_destination,

smtpd_sender_restrictions =
        permit_mynetworks,
#       permit_sasl_authenticated,
#       hash:/etc/postfix/whitelisted_domains,
#       check_client_access hash:/etc/postfix/check_client_access,
        reject_unknown_sender_domain,
        reject_unauth_destination,
        reject_unauth_pipelining,
        reject_non_fqdn_recipient,
        reject_non_fqdn_sender,
        reject_unknown_sender_domain,
        reject_unknown_recipient_domain,
        reject_unauth_destination,
        check_sender_access pcre:/etc/postfix/sender_pcre,
        check_sender_access inline:{
<% scope.lookupvar('postfix::config')[@instance]['virtual_mailbox_domains'].each do |domain| -%>
          { <%= domain %> = REJECT local sender from unauthorized client }
<% end %>
        }

smtpd_relay_restrictions =
        permit_mynetworks,
        reject_unauth_destination,
        reject_unauth_pipelining,
        reject_non_fqdn_recipient,
        reject_non_fqdn_sender,
        reject_unknown_sender_domain,
        reject_unknown_recipient_domain,
        reject_unauth_destination,

smtpd_data_restrictions =
        reject_unauth_pipelining

smtpd_discard_ehlo_keywords = silent-discard, dsn

# fibertel, orange.fr
# TODO: rate limit per destination
initial_destination_concurrency = 2
default_destination_concurrency_limit = 10
smtp_destination_recipient_limit = 10
lmtp_destination_concurrency_limit = 1

<%# initial support for multi instance postfix, not yet complete -%>
<% if scope.lookupvar('postfix::config').keys.length > 1 -%>
  <%- if @instance == 'primary' -%>
multi_instance_wrapper = ${command_directory}/postmulti -p --
multi_instance_enable = yes
multi_instance_directories =
    <% scope.lookupvar('postfix::config').keys.each do |secondary_instance| -%>
      <%- if secondary_instance != 'primary' -%>
        /etc/postfix-<%= secondary_instance %>
      <% end -%>
    <% end -%>
  <% end -%>
<% end -%>
